class Solution {
    public int[] spiralOrder(int[][] matrix) {
        if (matrix == null || matrix.length == 0) {
            return new int[]{};
        }
        int m = matrix.length;
        int n = matrix[0].length;
        int left = 0;
        int top = 0;
        int right = n -1;
        int bot = m - 1;
        int index = 0;
        int[] arr = new int[m * n];
        while(left <= right && top <= bot) {
            for (int i = left; i <= right && top <= bot; i++) {
                arr[index++] = matrix[top][i];
            }
            top++;
            for (int i = top; i <= bot && left <= right; i++) {
                arr[index++] = matrix[i][right];
            }
            right--;
            for (int i = right; i >= left && top <= bot; i--) {
                arr[index++] = matrix[bot][i];
            }
            bot--;
            for (int i = bot; i >= top && left <= right; i--) {
                arr[index++] = matrix[i][left];
            }
            left++;
        }
        return arr;
    }
}
