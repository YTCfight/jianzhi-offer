////删除链表中重复的结点(在排序的链表中)
typedef struct Node
{
	int data;
	struct Node* next;
}Node, *pList;
void InitNode(pList Node)
{
	assert(Node != NULL);
	Node->data = -1;
	Node->next = NULL;
}
Node* GetNode(int val)
{
	Node* p = (Node*)malloc(sizeof(Node));
	assert(p != NULL);
	p->data = val;
	p->next = NULL;
	return p;
}
//尾插
void InsertTail( pList head,int val)
{
	Node* pGet = GetNode(val);
	assert(pGet != NULL);
	Node* p = head;
	while (p->next != NULL)
	{
		p = p->next;
	}
	p->next = pGet;
}
void Show(Node* head)
{
	Node* p = head->next;
	while (p!= NULL)
	{
		printf("%d ", p->data);
		p = p->next;
	}
typedef struct Node
{
	int data;
	struct Node* next;
}Node, *pList;
void InitNode(pList Node)
{
	assert(Node != NULL);
	Node->data = -1;
	Node->next = NULL;
}
Node* GetNode(int val)
{
	Node* p = (Node*)malloc(sizeof(Node));
	assert(p != NULL);
	p->data = val;
	p->next = NULL;
	return p;
}
//尾插
void InsertTail( pList head,int val)
{
	Node* pGet = GetNode(val);
	assert(pGet != NULL);
	Node* p = head;
	while (p->next != NULL)
	{
		p = p->next;
	}
	p->next = pGet;
}
void Show(Node* head)
{
	Node* p = head->next;
	while (p!= NULL)
	{
		printf("%d ", p->data);
		p = p->next;
	}
