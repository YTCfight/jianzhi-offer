class Solution {
    int count;
    public int reversePairs(int[] nums) {
        merge(nums, 0, nums.length - 1);
        return count;
    }
    public void merge(int[] nums, int left, int right) {
        int mid = (left + right) / 2;
        if (left < right) {
            merge(nums, left, mid);
            merge(nums, mid + 1, right);
            help(nums, left, mid, right);
        }
    }
    public void help(int[] nums, int left, int mid, int right) {
        int len = right - left + 1;
        int[] arr = new int[len];
        int index = 0;
        int i = left;
        int j = mid + 1;
        while(i <= mid && j <= right) {
            if (nums[i] <= nums[j]) {
                arr[index++] = nums[i++];
            } else {
                arr[index++] = nums[j++]; 
                count += mid + 1 -i;
            }
        }
        while(i <= mid) {
            arr[index++] = nums[i++];
        }
        while(j <= right) {
            arr[index++] = nums[j++];
        }
        for (int k = 0; k < len; k++) {
            nums[left + k] = arr[k];
        }
    }
}
