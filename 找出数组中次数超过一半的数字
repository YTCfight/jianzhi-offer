//找出数组中次数超过一半的数字
//方法一
int Seek(int* arr, int len)
{
	assert(arr != NULL);
	int i = 0;
	int result = arr[0];
	int time = 0;
	for (i = 0; i < len; i++)
	{
		if (arr[i] == result)
		{
			time++;
			continue;
		}
		else
		{
			if (time == 0)
			{
				result = arr[i + 1];
				time = 0;
				continue;
			}
			time--;
		}
	}
	return result;
}
int main()
{
	int arr[] = { 1, 2, 3, 2, 2, 2, 5, 4, 2 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int ret=Seek(arr, len);
	printf("%d\n", ret);
	system("pause");
	return 0;
}
//方法二
//#endif
int Seek(int* arr, int len)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < len - 1; i++)
	{
		for (j = 0; j < len - 1 - i; j++)
		{
			if (arr[j]>arr[j + 1])
			{
				int tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
	return arr[(i + 1) / 2];
}
int main()
{
	int arr[] = { 1, 2, 3, 2, 2, 2, 5, 4, 2 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int ret = Seek(arr, len);
	printf("%d\n", ret);
	system("pause");
	return 0;
}
