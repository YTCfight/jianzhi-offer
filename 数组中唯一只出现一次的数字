//数组中唯一只出现一次的数字
int SeekNumberOneTime(int arr[], int len)
{
	int str[32] = { 0 };
	int i = 0;
	int j = 0;
	int bitMask = 1;
	for (i = 0; i < len; i++)
	{
		bitMask = 1;
		for (j = 31; j >= 0; j--)
		{
			int bit = arr[i] & bitMask;
			if (bit != 0)
			{
				str[j]++;
			}
			bitMask=bitMask << 1;
		}
	}
	//检查str数组的每一位出现的次数
	int result = 0;
	int tmp = 31;
	for (i = 0; i < 32; i++)
	{
		result+=(str[i] %= 3)*pow(2,tmp);
		tmp--;
	}
	return result;
}
int main()
{
	int arr[] = { 1, 2, 2, 2, 3, 3, 3 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int ret = SeekNumberOneTime(arr, len);
	printf("%d\n", ret); 
	system("pause");
	return 0;
}
