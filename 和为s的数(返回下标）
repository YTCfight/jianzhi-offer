//和为s的数(返回下标）
//方法一：暴力求解法（从前面两个两个找） 2.分别在前后设立两个指针.
int SeekNumberAddS(int arr[], int len, int input, int *x, int *y)
{
	int left = 0;
	int right = len - 1;
	while (left < right)
	{
		if (arr[left] + arr[right]>input)
		{
			right--;
		}
		else if (arr[left] + arr[right] < input)
		{
			left++;
		}
		else
		{
			*x = left;
			*y = right;
			return 1;
		}
	}
	return 0;
}
int main()
{
	int arr[] = { 1, 2, 4, 7, 11, 15 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int x = -1;
	int y = -1;
	int input = 0;
	scanf("%d", &input);
	int ret=SeekNumberAddS(arr, len, input,&x,&y);
	if (ret == 1)
	{
		printf("找到了，下标为：%d %d\n", x, y);
	}
	else
	{
		printf("没找到\n");
	}
	system("pause");
	return 0;
}
