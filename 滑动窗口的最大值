class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if (nums == null || nums.length == 0) {
            return new int[]{};
        }
        Deque<Integer> queue = new LinkedList<>();
        int[] arr = new int[nums.length - (k - 1)];
        for (int i = 0; i < nums.length; i++) {
            while(!queue.isEmpty() && queue.peekFirst() < i - (k - 1)) {
                queue.pollFirst();
            }
            while(!queue.isEmpty() && nums[queue.peekLast()] < nums[i]) {
                queue.pollLast();
            }
            queue.offer(i);
            if (i >= k -1) {
                arr[i - (k - 1)] =nums[queue.peekFirst()];
            }
        }
        return arr;
    }
}
